<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.takeaway.modular.dao.mapper.ActivitysMapper">
	<resultMap id="BaseResultMap" type="com.takeaway.modular.dao.model.Activitys">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="activity_no" property="activityNo" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="fullMoney" property="fullMoney" jdbcType="DECIMAL" />
		<result column="reduceMoney" property="reduceMoney" jdbcType="DECIMAL" />
		<result column="description" property="description" jdbcType="VARCHAR" />
		<result column="startDate" property="startDate" jdbcType="TIMESTAMP" />
		<result column="endDate" property="endDate" jdbcType="TIMESTAMP" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		id,activity_no,name,fullMoney,reduceMoney,description,
		startDate,endDate,created_at,updated_at,status
	</sql>

	<select id="getById" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_activitys
		where id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="getByMerchantId" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		distinct c.*
		from tb_activitys c,tb_coupon_merchants cm
		where c.id=cm.targetId and c.status=1 and cm.merchant_id = #{merchantId,jdbcType=VARCHAR}
	</select>

	<select id="getAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_activitys where status=1 order by id desc
	</select>

	<select id="findPage" parameterType="com.takeaway.modular.dao.dto.ActivitysDto" 
		resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from tb_activitys  where status=1 
		<if test="name != null and name != ''">
			and name like "%"#{name,jdbcType=VARCHAR}"%"
		</if>
		order by id desc;

	</select>
	
	<select id="getTotalCount" parameterType="java.lang.String" resultType="java.lang.String" >
		select count(o.id) as totalCount from tb_orders o where 
  		o.is_pay=1 and o.`status` in(4,5,7)   
  		and o.activity_id=#{activityId,jdbcType=VARCHAR}
	</select>
	
	<select id="getTotalPrice" parameterType="java.lang.String" resultType="java.lang.String" >
		select sum(o.activityMoney) as totalPrice from tb_orders o where 
  		o.is_pay=1 and o.`status` in(4,5,7)   
  		and o.activity_id=#{activityId,jdbcType=VARCHAR}
	</select>

	<delete id="delete" parameterType="java.lang.String">
		update tb_activitys
		set status
		= -1
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<insert id="save" parameterType="com.takeaway.modular.dao.model.Activitys">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into tb_activitys (
		activity_no,name,fullMoney,reduceMoney,description,
		startDate,endDate,created_at,status
		)
		values
		(
		#{activityNo,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{fullMoney,jdbcType=DECIMAL},
		#{reduceMoney,jdbcType=DECIMAL},
		#{description,jdbcType=VARCHAR},
		#{startDate,jdbcType=TIMESTAMP},
		#{endDate,jdbcType=TIMESTAMP},
		#{createdAt,jdbcType=TIMESTAMP},
		#{status,jdbcType=INTEGER}
		)
	</insert>

	<update id="update" parameterType="com.takeaway.modular.dao.model.Activitys">
		update tb_activitys
		set
		name= #{name,jdbcType=VARCHAR},
		fullMoney= #{fullMoney,jdbcType=DECIMAL},
		reduceMoney= #{reduceMoney,jdbcType=DECIMAL},
		description= #{description,jdbcType=VARCHAR},
		startDate= #{startDate,jdbcType=TIMESTAMP},
		endDate= #{endDate,jdbcType=TIMESTAMP},
		updated_at = #{updatedAt,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
</mapper>