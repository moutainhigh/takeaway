<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.takeaway.modular.dao.mapper.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.takeaway.modular.dao.model.Orders">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="merchant_id" property="merchantId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="order_type" property="orderType" jdbcType="INTEGER" />
		<result column="meals" property="meals" jdbcType="INTEGER" />
		<result column="total_price" property="totalPrice" jdbcType="DECIMAL" />
		<result column="packingCharge" property="packingCharge" jdbcType="DECIMAL" />
		<result column="deliverMoney" property="deliverMoney" jdbcType="DECIMAL" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="is_pay" property="isPay" jdbcType="INTEGER" />
		<result column="pay_date" property="payDate" jdbcType="TIMESTAMP" />
		<result column="pay_sno" property="paySno" jdbcType="VARCHAR" />
		<result column="realTotalMoney" property="realTotalMoney" jdbcType="DECIMAL" />	
		<result column="is_ship" property="isShip" jdbcType="INTEGER" />		
		<result column="ship_date" property="shipDate" jdbcType="TIMESTAMP" />	
		<result column="is_receipt" property="isReceipt" jdbcType="INTEGER" />		
		<result column="receipt_date" property="receiptDate" jdbcType="TIMESTAMP" />	
		<result column="is_received" property="isReceived" jdbcType="INTEGER" />		
		<result column="received_date" property="receivedDate" jdbcType="TIMESTAMP" />	
		<result column="refund_apply_date" property="refundApplyDate" jdbcType="TIMESTAMP" />
		<result column="is_refund" property="isRefund" jdbcType="INTEGER" />		
		<result column="refund_date" property="refundDate" jdbcType="TIMESTAMP" />
		<result column="refund_money" property="refundMoney" jdbcType="DECIMAL" />
		<result column="refundSrcStatus" property="refundSrcStatus" jdbcType="INTEGER" />		
		<result column="is_reservation" property="isReservation" jdbcType="INTEGER" />		
		<result column="reservation_date" property="reservationDate" jdbcType="TIMESTAMP" />	
		<result column="is_reminder" property="isReminder" jdbcType="INTEGER" />		
		<result column="reminder_date" property="reminderDate" jdbcType="TIMESTAMP" />		
		<result column="is_distribution" property="isDistribution" jdbcType="INTEGER" />	
		<result column="distribution_date" property="distributionDate" jdbcType="TIMESTAMP" />	
		<result column="merchant_type" property="merchantType" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />		
		<result column="pay_type" property="payType" jdbcType="INTEGER" />
		<result column="is_invoice" property="isInvoice" jdbcType="INTEGER" />
		<result column="invoiceClient" property="invoiceClient" jdbcType="VARCHAR" />
		<result column="is_appraises" property="isAppraises" jdbcType="INTEGER" />
		<result column="appraises_date" property="appraisesDate" jdbcType="TIMESTAMP" />	
		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="userPhone" property="userPhone" jdbcType="VARCHAR" />
		<result column="userAddress" property="userAddress" jdbcType="VARCHAR" />
		<result column="platform_commission" property="platformCommission" jdbcType="DECIMAL" />	
		<result column="orderScore" property="orderScore" jdbcType="INTEGER" />		
		<result column="couponMoney" property="couponMoney" jdbcType="DECIMAL" />	
		<result column="activityMoney" property="activityMoney" jdbcType="DECIMAL" />	
		<result column="activity_id" property="activityId" jdbcType="INTEGER" />
		<result column="coupon_id" property="couponId" jdbcType="INTEGER" />
		<result column="issorderno" property="issorderno" jdbcType="VARCHAR" />
		<result column="syncstatus" property="syncstatus" jdbcType="VARCHAR" />
		<result column="lat" property="lat" jdbcType="VARCHAR" />
		<result column="lng" property="lng" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,order_no,merchant_id,user_id,order_type,meals,total_price,packingCharge,deliverMoney,
		status,created_at,updated_at,is_pay,pay_date,pay_sno,realTotalMoney,is_ship,ship_date,is_receipt,receipt_date,
		is_received,received_date,refund_apply_date,is_refund,refund_date,refund_money,refundSrcStatus,is_reservation,reservation_date,is_reminder,
		reminder_date,is_distribution,distribution_date,merchant_type,remark,pay_type,is_invoice,invoiceClient,is_appraises,appraises_date,userName,userPhone,
		userAddress,platform_commission,orderScore,couponMoney,activityMoney,activity_id,coupon_id,issorderno,syncstatus,lat,lng
	</sql>

	<select id="getById" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		o.*,m.name as merchantName,m.tel as merchantTel  
		from tb_orders o,tb_merchants m 
		where o.merchant_id=m.id and  o.id = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="getByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_orders 
		where order_no = #{orderNo,jdbcType=VARCHAR}
	</select>
	
	<select id="getByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from tb_orders 
		where user_id = #{userId,jdbcType=VARCHAR} 
		order by created_at desc
	</select>
	
	<select id="getByPay" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_orders 
		where is_pay=0 and user_id = #{userId,jdbcType=VARCHAR} 
		order by created_at desc
	</select>
	
	<select id="getByShip" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_orders 
		where status=3 and user_id = #{userId,jdbcType=VARCHAR} 
		order by created_at desc
	</select>
	
	<select id="getByAppraises" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_orders 
		where status=4 and user_id = #{userId,jdbcType=VARCHAR} 
		order by created_at desc
	</select>
	
	<select id="getByNotAppraises"  resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from tb_orders 
		where is_appraises=0 and status=4 
		order by created_at desc
	</select>
	
	<select id="getByNotReceipt"  resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from tb_orders 
		where is_receipt=0 and status=3 
		order by created_at desc
	</select>
	
	<select id="getByNotPay"  resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from tb_orders 
		where is_pay=0 and status=1 
		order by created_at desc
	</select>
	
	<select id="getByRefund" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_orders 
		where status=6 and user_id = #{userId,jdbcType=VARCHAR} 
		order by created_at desc
	</select>

	<select id="getProcessing" resultType="java.lang.Integer" >
		select count(o.id) as processing  from tb_orders o where o.`status`=0;
	</select>
	
	<select id="getRefunding" resultType="java.lang.Integer" >
		select count(o.id) as refunding from tb_orders o where o.`status`=3;
	</select>
	
	<select id="getTodayOrders" resultType="java.lang.Integer" >
		select count(o.id) as todayOrders from tb_orders o where date(o.created_at) = curdate();
	</select>
	
	<select id="getTodayTurnover" resultType="java.lang.Double" >
		select sum(o.total_price) as todayTurnover from tb_orders o where date(o.created_at) = curdate();
	</select>
	
	<select id="getMonthOrdersByMerchantId" parameterType="java.lang.String" resultType="java.lang.Integer" >
		select count(0) from tb_orders o where o.merchant_id=#{merchantId,jdbcType=VARCHAR} 
		and date_format(o.created_at,'%Y-%m')=date_format(now(),'%Y-%m')
	</select>

	<select id="findPage" parameterType="com.takeaway.modular.dao.dto.OrdersDto"
		resultType="com.takeaway.modular.dao.dto.OrdersDto">
		select
		distinct o.id,o.order_no as orderNo,o.merchant_id as merchantId,o.user_id as userId,o.order_type as orderType,o.meals,
		o.total_price as totalPrice,o.packingCharge,o.deliverMoney,o.status,o.created_at as createdAt,
		o.updated_at as updatedAt,o.is_pay as isPay,o.pay_date as payDate,o.pay_sno as paySno,o.realTotalMoney,
		o.is_ship as isShip,o.ship_date as shipDate,o.is_receipt as isReceipt,o.receipt_date as receiptDate,o.is_received as isReceived,
		o.received_date as receivedDate,o.refund_apply_date as refundApplyDate,o.is_refund as isRefund,o.refund_date as refundDate,o.refund_money as refundMoney,o.refundSrcStatus,
		o.is_reservation as isReservation,o.reservation_date as reservationDate,o.is_reminder as isReminder,o.reminder_date as reminderDate,
		o.is_distribution as isDistribution,o.distribution_date as distributionDate,o.merchant_type as merchantType,o.remark,o.pay_type as payType,o.is_invoice as isInvoice,o.invoiceClient,
		o.is_appraises as isAppraises,o.appraises_date as appraisesDate,o.userName,o.userPhone,o.userAddress,o.platform_commission as platformCommission,o.orderScore,
		o.couponMoney,o.activityMoney,o.issorderno,o.syncstatus,o.lat,o.lng,m.name as merchantName,oi.targetName as targetName
		from tb_orders o,tb_merchants m,tb_order_items oi 
		where o.merchant_id=m.id and o.id=oi.order_id and o.status not in(1,8) and o.is_reservation=0 
		<if test="userId != null and userId != ''">
			and o.user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="orderNo != null and orderNo != ''">
			and o.order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		<if test="merchantId != null and merchantId != ''">
			and o.merchant_id = #{merchantId,jdbcType=VARCHAR}
		</if>
		order by o.id desc
	</select>
	
	<select id="reportQuery" parameterType="com.takeaway.modular.dao.dto.ReportDto"
		resultType="com.takeaway.modular.dao.dto.ReportDto">
		select DATE_FORMAT(o.pay_date,'%Y-%m-%d') as settlTime,
		sum(o.total_price) as totalPrice,
		sum(o.deliverMoney) as deliverMoney,
		sum(o.couponMoney) as couponMoney,
		sum(o.activityMoney) as activityMoney,
		sum(o.realTotalMoney) as realTotalMoney,
		sum(o.refund_money) as totalRefundMoney,
		(sum(o.realTotalMoney)-sum(o.platform_commission)) as realIncome,
		(sum(o.realTotalMoney)-sum(o.platform_commission))*0.006 as wxProcedures,
		(sum(o.realTotalMoney)-sum(o.platform_commission)-(sum(o.realTotalMoney)-sum(o.platform_commission))*0.006) as settleMoney
		from tb_merchants m,tb_orders o where m.id=o.merchant_id and o.is_pay=1 and o.status in(4,5) and o.is_refund=0 
		<if test="startTime != null and startTime != ''">
			and o.pay_date &gt;= #{startTime,jdbcType=VARCHAR}
		</if>
		<if test="endTime != null and endTime != ''">
			and o.pay_date &lt;= #{endTime,jdbcType=VARCHAR}
		</if>
		<if test="merchantId != null and merchantId != ''">
			and o.merchant_id = #{merchantId,jdbcType=VARCHAR} 
		</if>
		group by DATE_FORMAT(o.pay_date,'%Y-%m-%d')
	</select>
	
	<select id="businessReport" parameterType="com.takeaway.modular.dao.dto.BusinessReportDto"
		resultType="com.takeaway.modular.dao.dto.BusinessReportDto">
	select settlTime,totalPrice,totalRealTotalMoney,successCount,totalPackingCharge,
			totalDeliverMoney,totalCouponMoney,totalActivityMoney,
		(select count(0) from tb_orders where is_pay=1 and DATE_FORMAT(pay_date,'%Y-%m-%d')=temp.settlTime) as allCount,
		(select count(0) from tb_orders where is_refund=1 and DATE_FORMAT(pay_date,'%Y-%m-%d')=temp.settlTime) as refundCount,
		(select sum(refund_money) from tb_orders where is_refund=1 and DATE_FORMAT(pay_date,'%Y-%m-%d')=temp.settlTime) as refundTotalMoney
 		from (		
		select DATE_FORMAT(o.pay_date,'%Y-%m-%d') as settlTime,
		sum(o.total_price) as totalPrice,
		sum(o.realTotalMoney) as totalRealTotalMoney,
		count(0) as successCount,
   		sum(o.packingCharge) as totalPackingCharge,
		sum(o.deliverMoney) as totalDeliverMoney,
		sum(o.couponMoney) as totalCouponMoney,
		sum(o.activityMoney) as totalActivityMoney
		from tb_orders o where o.is_pay=1  and o.status in(4,5) and o.is_refund=0 
		<if test="startTime != null and startTime != ''">
			and o.pay_date &gt;= #{startTime,jdbcType=VARCHAR}
		</if>
		<if test="endTime != null and endTime != ''">
			and o.pay_date &lt;= #{endTime,jdbcType=VARCHAR}
		</if>
		<if test="merchantId != null and merchantId != ''">
			and o.merchant_id = #{merchantId,jdbcType=VARCHAR} 
		</if>
		group by DATE_FORMAT(o.pay_date,'%Y-%m-%d') 
		order by DATE_FORMAT(o.pay_date,'%Y-%m-%d') desc
		) temp
	</select>
	
 	<select id="bossReport" parameterType="com.takeaway.modular.dao.dto.BossReportDto"
		resultType="com.takeaway.modular.dao.dto.BossReportDto">
		select 
   		DATE_FORMAT(o.pay_date,'%Y-%m-%d') as settlTime,
		sum(o.total_price) as totalPrice,
		count(0)  as successCount,
		(select distinct max(o.realTotalMoney) from tb_orders ) as maxMoney,
		(select distinct min(o.realTotalMoney) from tb_orders ) as minMoney,
		(select count(0) from tb_user_logs ul where ul.merchant_id = o.merchant_id 
		<if test="reportTime != null and reportTime != ''">
			and DATE_FORMAT(ul.created_at,'%Y-%m-%d') = #{reportTime,jdbcType=VARCHAR}
		</if>
		) as accessTimes,
		sum(o.realTotalMoney) as realTotalMoney
		from tb_orders o where o.is_pay=1 and o.`status` in(4,5) and o.is_refund=0 
		<if test="reportTime != null and reportTime != ''">
			and DATE_FORMAT(o.pay_date,'%Y-%m-%d') = #{reportTime,jdbcType=VARCHAR}
		</if>
		<if test="merchantId != null and merchantId != ''">
			and o.merchant_id = #{merchantId,jdbcType=VARCHAR} 
		</if>
		group by DATE_FORMAT(o.pay_date,'%Y-%m-%d')
	</select> 
	
	<select id="reportExport" parameterType="com.takeaway.modular.dao.dto.ReportDto"
		resultType="com.takeaway.modular.dao.dto.ReportDto">
		select DATE_FORMAT(o.pay_date,'%Y-%m-%d') as settlTime,
		sum(o.total_price) as totalPrice,
		sum(o.deliverMoney) as totalDeliverMoney,
		sum(o.couponMoney) as totalCouponMoney,
		sum(o.activityMoney) as totalActivityMoney,
		sum(o.realTotalMoney) as totalRealTotalMoney,
		(sum(o.realTotalMoney)-sum(o.platform_commission)) as realIncome,
		(sum(o.realTotalMoney)-sum(o.platform_commission))*0.006 as wxProcedures,
		(sum(o.realTotalMoney)-sum(o.platform_commission)-(sum(o.realTotalMoney)-sum(o.platform_commission))*0.006) as settleMoney
		from tb_merchants m,tb_orders o where m.id=o.merchant_id and o.is_pay=1 and o.status in(4,5) and o.is_refund=0 
		<if test="startTime != null and startTime != ''">
			and o.pay_date &gt;= #{startTime,jdbcType=VARCHAR}
		</if>
		<if test="endTime != null and endTime != ''">
			and o.pay_date &lt;= #{endTime,jdbcType=VARCHAR}
		</if>
		<if test="merchantId != null and merchantId != ''">
			and o.merchant_id = #{merchantId,jdbcType=VARCHAR} 
		</if>
		group by DATE_FORMAT(o.pay_date,'%Y-%m-%d')
	</select>
	
	<select id="findReminderPage" parameterType="com.takeaway.modular.dao.dto.OrdersDto"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_orders 
		where 1=1 and is_reminder=1 and status=2 
		<if test="orderNo != null and orderNo != ''">
			and order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		order by id desc
	</select>

	<select id="findReservesPage" parameterType="com.takeaway.modular.dao.dto.OrdersDto"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_orders 
		where 1=1 and is_reservation=1 and status not in(1,8) 
		<if test="orderNo != null and orderNo != ''">
			and order_no = #{orderNo,jdbcType=VARCHAR}
		</if>
		order by id desc
	</select>

	<update id="delete" parameterType="java.lang.String">
		update tb_orders
		set status = 9
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<insert id="save" parameterType="com.takeaway.modular.dao.model.Orders">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into tb_orders (
		order_no,merchant_id,user_id,
		meals,total_price,packingCharge,
		deliverMoney,status,created_at,
		is_pay,realTotalMoney,is_ship,
		is_receipt,is_received,is_refund,
		is_reservation,reservation_date,
		is_reminder,is_distribution,
		remark,is_invoice,is_appraises,userName,
		userPhone,userAddress,platform_commission,
		couponMoney,activityMoney,coupon_id,activity_id,lat,lng
		)
		values
		(#{orderNo,jdbcType=VARCHAR},#{merchantId,jdbcType=INTEGER},#{userId,jdbcType=INTEGER},#{meals,jdbcType=INTEGER},
		#{totalPrice,jdbcType=DECIMAL},#{packingCharge,jdbcType=DECIMAL},
		#{deliverMoney,jdbcType=DECIMAL},#{status,jdbcType=INTEGER},#{createdAt,jdbcType=TIMESTAMP},
		#{isPay,jdbcType=INTEGER},#{realTotalMoney,jdbcType=DECIMAL},#{isShip,jdbcType=INTEGER},
		#{isReceipt,jdbcType=INTEGER},#{isReceived,jdbcType=INTEGER},#{isRefund,jdbcType=INTEGER},
		#{isReservation,jdbcType=INTEGER},#{reservationDate,jdbcType=TIMESTAMP},
		#{isReminder,jdbcType=INTEGER},#{isDistribution,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR},#{isInvoice,jdbcType=INTEGER},
		#{isAppraises,jdbcType=INTEGER},#{userName,jdbcType=VARCHAR},
		#{userPhone,jdbcType=VARCHAR},#{userAddress,jdbcType=VARCHAR},#{platformCommission,jdbcType=DECIMAL},
		#{couponMoney,jdbcType=DECIMAL},#{activityMoney,jdbcType=DECIMAL},#{couponId,jdbcType=INTEGER},
		#{activityId,jdbcType=INTEGER},#{lat,jdbcType=VARCHAR},#{lng,jdbcType=VARCHAR}
		)
	</insert>

	<update id="update" parameterType="com.takeaway.modular.dao.model.Orders">
	update tb_orders
	<set>
		<if test="status != null">
			status = #{status,jdbcType=INTEGER},
		</if>
		<if test="updatedAt != null">
			updated_at = #{updatedAt,jdbcType=TIMESTAMP},
		</if>
		<if test="isPay != null">
			is_pay = #{isPay,jdbcType=INTEGER},
		</if>
		<if test="payDate != null">
			pay_date = #{payDate,jdbcType=TIMESTAMP},
		</if>
		<if test="paySno != null">
			pay_sno = #{paySno,jdbcType=VARCHAR},
		</if>
		<if test="isShip != null">
			is_ship = #{isShip,jdbcType=INTEGER},
		</if>
		<if test="shipDate != null">
			ship_date = #{shipDate,jdbcType=TIMESTAMP},
		</if>
		<if test="isReceipt != null">
			is_receipt = #{isReceipt,jdbcType=INTEGER},
		</if>
		<if test="receiptDate != null">
			receipt_date = #{receiptDate,jdbcType=TIMESTAMP},
		</if>
		<if test="isReceived != null">
			is_received = #{isReceived,jdbcType=INTEGER},
		</if>
		<if test="receivedDate != null">
			received_date = #{receivedDate,jdbcType=TIMESTAMP},
		</if>
		<if test="refundApplyDate != null">
			refund_apply_date = #{refundApplyDate,jdbcType=TIMESTAMP},
		</if>
		<if test="isRefund != null">
			is_refund = #{isRefund,jdbcType=INTEGER},
		</if>
		<if test="refundDate != null">
			refund_date = #{refundDate,jdbcType=TIMESTAMP},
		</if>
		<if test="refundMoney != null">
			refund_money = #{refundMoney,jdbcType=DECIMAL},
		</if>
		<if test="isReservation != null">
			is_reservation = #{isReservation,jdbcType=INTEGER},
		</if>
		<if test="reservationDate != null">
			reservation_date = #{reservationDate,jdbcType=TIMESTAMP},
		</if>
		<if test="isReminder != null">
			is_reminder = #{isReminder,jdbcType=INTEGER},
		</if>
		<if test="reminderDate != null">
			reminder_date = #{reminderDate,jdbcType=TIMESTAMP},
		</if>
		<if test="isDistribution != null">
			is_distribution = #{isDistribution,jdbcType=INTEGER},
		</if>
		<if test="distributionDate != null">
			distribution_date = #{distributionDate,jdbcType=TIMESTAMP},
		</if>
		<if test="isInvoice != null">
			is_invoice = #{isInvoice,jdbcType=INTEGER},
		</if>
		<if test="isAppraises != null">
			is_appraises = #{isAppraises,jdbcType=INTEGER},
		</if>
		<if test="appraisesDate != null">
			appraises_date = #{appraisesDate,jdbcType=TIMESTAMP}, 
		</if>
		<if test="issorderno != null">
			issorderno = #{issorderno,jdbcType=VARCHAR}, 
		</if>
		<if test="syncstatus != null">
			syncstatus = #{syncstatus,jdbcType=VARCHAR} 
		</if>
		
    </set>
    where id = #{id,jdbcType=INTEGER}
  	</update>
</mapper>